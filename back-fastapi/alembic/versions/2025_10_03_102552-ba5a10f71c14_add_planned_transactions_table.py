"""Add planned_transactions table

Revision ID: ba5a10f71c14
Revises: 02f3fc8ca59d
Create Date: 2025-10-03 10:25:52.447694

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ba5a10f71c14'
down_revision = '02f3fc8ca59d'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'planned_transactions',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('account_id', sa.Integer(), nullable=False),
        sa.Column('amount', sa.Numeric(), nullable=False),
        sa.Column('category_id', sa.Integer(), nullable=True),
        sa.Column('label', sa.String(length=50), nullable=True),
        sa.Column('notes', sa.Text(), nullable=True),
        sa.Column('is_income', sa.Boolean(), nullable=False),
        sa.Column('planned_date', sa.DateTime(timezone=True), nullable=False),
        sa.Column('is_recurring', sa.Boolean(), server_default='f', nullable=False),
        sa.Column('recurrence_rule', postgresql.JSON(astext_type=sa.Text()), nullable=True),
        sa.Column('is_executed', sa.Boolean(), server_default='f', nullable=False),
        sa.Column('executed_transaction_id', sa.Integer(), nullable=True),
        sa.Column('execution_date', sa.DateTime(timezone=True), nullable=True),
        sa.Column('is_active', sa.Boolean(), server_default='t', nullable=False),
        sa.Column('is_deleted', sa.Boolean(), server_default='f', nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['category_id'], ['user_categories.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['executed_transaction_id'], ['transactions.id'], ondelete='SET NULL'),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_planned_transactions_account_id'), 'planned_transactions', ['account_id'], unique=False)
    op.create_index(op.f('ix_planned_transactions_category_id'), 'planned_transactions', ['category_id'], unique=False)
    op.create_index(op.f('ix_planned_transactions_executed_transaction_id'), 'planned_transactions', ['executed_transaction_id'], unique=False)
    op.create_index(op.f('ix_planned_transactions_label'), 'planned_transactions', ['label'], unique=False)
    op.create_index(op.f('ix_planned_transactions_planned_date'), 'planned_transactions', ['planned_date'], unique=False)
    op.create_index(op.f('ix_planned_transactions_user_id'), 'planned_transactions', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_planned_transactions_user_id'), table_name='planned_transactions')
    op.drop_index(op.f('ix_planned_transactions_planned_date'), table_name='planned_transactions')
    op.drop_index(op.f('ix_planned_transactions_label'), table_name='planned_transactions')
    op.drop_index(op.f('ix_planned_transactions_executed_transaction_id'), table_name='planned_transactions')
    op.drop_index(op.f('ix_planned_transactions_category_id'), table_name='planned_transactions')
    op.drop_index(op.f('ix_planned_transactions_account_id'), table_name='planned_transactions')
    op.drop_table('planned_transactions')
    # ### end Alembic commands ###
